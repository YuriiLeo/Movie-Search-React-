{"version":3,"file":"static/js/490.46a29a40.chunk.js","mappings":"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","sources":["Pages/MovieDetailsPage/MovieDetailsPage.jsx","Pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Warnings/Warnings.styled.jsx","components/Warnings/Warnings.jsx","services/ApiMovie.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport { getMovieById } from 'services/ApiMovie';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport Warnings from 'components/Warnings/Warnings';\nimport {\n  BackgraundPost,\n  Img,\n  LinkStyled,\n  List,\n  Poster,\n  PosterWrapper,\n  Wrapper,\n  WrapperSection,\n} from './MovieDetailsPage.styled';\n\nexport default function MovieDetailsPage() {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n  const id = movieId;\n\n  const location = useLocation();\n\n  const isCastPage = location.pathname.includes('cast' || 'reviews');\n  const castLink = isCastPage ? `/movies/${id}` : `/movies/${id}/cast`;\n  const isReviewsPage = location.pathname.includes('reviews' || 'cast');\n  const reviewsLink = isReviewsPage ? `/movies/${id}` : `/movies/${id}/reviews`;\n\n  const backLink = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        const result = await getMovieById(id);\n        setMovie(result);\n      } catch (e) {\n        setError(e);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const { poster_path, title, vote_average, overview, genres, backdrop_path } =\n    movie;\n  const genreFilter = genres.map(genre => genre.name).join(', ');\n\n  const posterPathImg = `https://image.tmdb.org/t/p/w342${poster_path}`;\n  const backdropPathImg = `https://image.tmdb.org/t/p/original${backdrop_path}`;\n  console.log(backdropPathImg);\n\n  return (\n    <BackgraundPost path={backdropPathImg}>\n      {loading && <Loader />}\n      {error && <Warnings text=\"Please, try again later\" />}\n      {\n        <div>\n          <LinkStyled to={backLink}>Go back</LinkStyled>\n          <Wrapper>\n            <WrapperSection>\n              {poster_path ? (\n                <Img src={posterPathImg} alt={movie.title} />\n              ) : (\n                <Img\n                  src={`http://dummyimage.com/100x150/99cccc.gif&text=Not+image! `}\n                />\n              )}\n              <PosterWrapper>\n                <Poster>\n                  <h2>{title}</h2>\n                  <p>User Score: {((vote_average / 10) * 100).toFixed(0)} %</p>\n                  <h3>Overviev</h3>\n                  <p>{overview}</p>\n                  <h4>Genres</h4>\n                  <p>{genreFilter}</p>\n                </Poster>\n              </PosterWrapper>\n            </WrapperSection>\n          </Wrapper>\n          <List>\n            <LinkStyled>\n              <NavLink to={castLink} state={{ from: backLink }}>\n                Cast\n              </NavLink>\n            </LinkStyled>\n            <LinkStyled>\n              <NavLink to={reviewsLink} state={{ from: backLink }}>\n                Reviews\n              </NavLink>\n            </LinkStyled>\n          </List>\n          <Suspense fallback={null}>\n            <Outlet />\n          </Suspense>\n        </div>\n      }\n    </BackgraundPost>\n  );\n}\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkStyled = styled(Link)`\n  display: inline-block;\n  margin-left: 40px;\n  margin-top: 12px;\n  margin-bottom: 12px;\n  padding: 5px;\n  border: 0;\n  top: 70px;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  background-color: #fff;\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  border-radius: 4px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n    background-color: #00bcd4de;\n    border-radius: 4px;\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n      0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n  }\n`;\n\nexport const BackgraundPost = styled.div`\n  background-image: url('${props => props.path}');\n  background-size: cover;\n  max-height: 100vh;\n  margin: 12px;\n\n  @media (min-width: 768px) {\n    margin: 12px 24px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 24px 16px;\n  border-bottom: 1px solid #211e1e;\n  background-position: right -200px top;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background: linear-gradient(\n    to bottom right,\n    rgb(0 188 212 / 87%),\n    rgb(0 188 212 / 50%)\n  );\n  color: #ffffff;\n  border-radius: 4px;\n  box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n\n  @media (min-width: 768px) {\n    margin: 12px;\n    padding: 30px 40px;\n  }\n`;\n\nexport const WrapperSection = styled.div`\n  @media (min-width: 768px) {\n    display: flex;\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const Img = styled.img`\n  @media (min-width: 426px) {\n    min-width: 300px;\n    width: 300px;\n    height: 450px;\n  }\n  display: block;\n  position: relative;\n  top: 0;\n  left: 0;\n  border-radius: 4px;\n  margin: auto;\n`;\nexport const PosterWrapper = styled.div`\n  display: flex;\n`;\n\nexport const Poster = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-evenly;\n  box-sizing: border-box;\n  padding-top: 24px;\n\n  > *:not(:first-child) {\n    padding-top: 8px;\n  }\n\n  @media (min-width: 768px) {\n    padding-top: 0;\n    padding-left: 40px;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;","import React from 'react';\nimport { BallTriangle } from 'react-loader-spinner'\nimport { Overlay } from './Loader.styled'; \nimport { createPortal } from 'react-dom';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Loader (props) {\n  return createPortal(\n      <Overlay>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#4fa94d\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n      </Overlay>,\n      modalRoot,\n    );\n  }\n\n","import styled from \"styled-components\";\n\nexport const Title = styled.p`\ndisplay: inline-block;\n    font-size: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 12px 24px;\n`;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Title } from './Warnings.styled';\n\nexport default function Warnings({text}) {\n  return (\n      <Title>{text}</Title>\n  )\n}\n\nWarnings.propTypes = {\n  text: PropTypes.string.isRequired\n}\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '2bec22f10b981066f1b82ccd0874c542';\nconst URL = 'https://api.themoviedb.org/3';\nconst Tranding = '/trending/movie/day';\nconst Search = '/search/movie?';\nconst SearchId = '/movie/';\nconst Credits = '/credits';\nconst Reviews = '/reviews';\n\nconst instance = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: KEY,\n    page: 1,\n  },\n});\n\nexport const getMovieTranding = async () => {\n  const { data } = await instance.get(`${Tranding}`);\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`${SearchId}${id}?`);\n\n  return data;\n};\n\nexport const getSearchMovie = async (query, page) => {\n  const { data } = await instance.get(`${Search}?`, {\n    params: {\n      page,\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`${SearchId}${id}${Credits}?`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`${SearchId}${id}${Reviews}?`);\n\n  return data;\n};\n\ngetMovieById.PropTypes = {\n  id: PropTypes.number,\n};\n\ngetSearchMovie.PropTypes = {\n  page: PropTypes.number,\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieCast.PropTypes = {\n  id: PropTypes.number,\n};\n\ngetMovieReviews.PropTypes = {\n  id: PropTypes.number,\n};\n"],"names":["MovieDetailsPage","useState","movie","setMovie","loading","setLoading","error","setError","id","useParams","movieId","location","useLocation","castLink","pathname","includes","reviewsLink","backLink","state","from","useEffect","fetchMovie","getMovieById","result","poster_path","title","vote_average","overview","genres","backdrop_path","genreFilter","map","genre","name","join","posterPathImg","backdropPathImg","console","log","path","text","to","src","alt","toFixed","Suspense","fallback","LinkStyled","styled","Link","BackgraundPost","props","Wrapper","WrapperSection","Img","PosterWrapper","Poster","List","Overlay","modalRoot","document","querySelector","Loader","createPortal","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","Title","Warnings","SearchId","instance","axios","baseURL","params","api_key","page","getMovieTranding","get","data","getSearchMovie","query","getMovieCast","getMovieReviews","PropTypes"],"sourceRoot":""}