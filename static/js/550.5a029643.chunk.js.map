{"version":3,"file":"static/js/550.5a029643.chunk.js","mappings":"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","sources":["Pages/HomePage/HomePage.jsx","Pages/HomePage/HomePage.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Warnings/Warnings.styled.jsx","components/Warnings/Warnings.jsx","services/ApiMovie.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { getMovieTranding } from 'services/ApiMovie';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Warnings from \"components/Warnings/Warnings\";\nimport React, { useState, useEffect } from 'react';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport { Title, Wrapper } from './HomePage.styled';\n\nexport default function HomePage() {\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n    \n      try {\n        const data = await getMovieTranding();\n\n        if (data.results.length === 0) {\n\n        } else {\n          setMovies(data.results);\n        }\n\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      }\n      finally {\n        setIsLoading(false);\n      }\n    }\n  \n    fetchMovies();\n      \n  }, []);\n\n\nconst isMovies = Boolean(movies.length);\n  \n  return (\n    <Wrapper>\n        <Title>Trending today\n        </Title>\n        <ToastContainer position=\"top-right\" autoClose={5000} />\n        {isLoading && <Loader/>}\n        {error && <Warnings text=\"Please, try again later\"/>}\n        {isMovies && <MoviesGallery items={movies} />}\n        {/* {(isMovies && movies.length < totalMovies) && <Button loadMore={loadMore} />} */}\n    </Wrapper>\n  )\n}\n","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\n  margin: 12px 24px;\n  border-radius: 4px;  \n`;\n\nexport const Title = styled.h1`\n    margin: 24px;\n    font-size: 40px;\n    font-weight: 500;\n        color: #676262;\n    text-align: center;\n`","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;","import React from 'react';\nimport { BallTriangle } from 'react-loader-spinner'\nimport { Overlay } from './Loader.styled'; \nimport { createPortal } from 'react-dom';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Loader (props) {\n  return createPortal(\n      <Overlay>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#4fa94d\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n      </Overlay>,\n      modalRoot,\n    );\n  }\n\n","import styled from \"styled-components\";\n\nexport const Gallery = styled.ul`\n    display: flex;\n  flex-wrap: wrap;\n    align-items: flex-start;\n    margin: -16px -8px;\n\n`;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    width: 100%;\n`\n\nexport const Item = styled.li`\n  flex-basis: calc(20% - 16px);\n    margin: 16px 8px;\n    transform: scale(1);\n\n    &:hover {\n    transform: scale(1.1);\n     background-color: rgba(144, 139, 138, 0.5);\n     padding-bottom: 15px;\n     border-radius: 4px;\n     border: 4px;\n       box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n    }\n`;\n\nexport const Image = styled.img`\n  width: 100%;\n    height: calc(width/3*2);\n    object-fit: cover;\n    border-radius: 5px;\n    display: block;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.p`\n  font-size: 20px;\n    line-height: 1.2;\n    text-transform: uppercase;\n    text-align: center;\n    color: #676262;\n    margin-top: 12px;\n\n`;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Item, Image, Wrapper, Title } from './MoviesGalleryItem.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function MoviesGalleryItem({ movieId, img, title }) {\n  const location = useLocation();\n  return (\n    <Item key={movieId}>\n      <Link to={`/movies/${movieId}`} state={{from: location}} >\n        <Wrapper>\n          {img ? <Image src={`https://image.tmdb.org/t/p/w342${img}`} alt={title} />\n            : <Image src={`http://dummyimage.com/100x150/99cccc.gif&text=Not+image! `} />}\n         \n        </Wrapper>\n                   <Title>{title}</Title> \n      </Link>\n    </Item>\n    )\n}\n\nMoviesGalleryItem.propTypes = {\n  movieId: PropTypes.number,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Gallery } from './MoviesGallery.styled';\nimport MoviesGalleryItem from 'components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem';\n\n\nexport default function MoviesGallery({ items }) {\n  return (\n  <Gallery>\n    {\n        items.map(({ id, backdrop_path, title, poster_path }) => {\n\n          const img = poster_path || backdrop_path ;\n          return (\n        <MoviesGalleryItem\n          key={id}\n          movieId={id}\n          img={img}\n          title={title}  />)\n        })}\n      </Gallery>\n  );\n};\n\nMoviesGallery.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        backdrop_path: PropTypes.string,\n        id: PropTypes.number,\n        title: PropTypes.string,\n        poster_path: PropTypes.string,\n    }))\n}","import styled from \"styled-components\";\n\nexport const Title = styled.p`\ndisplay: inline-block;\n    font-size: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 12px 24px;\n`;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Title } from './Warnings.styled';\n\nexport default function Warnings({text}) {\n  return (\n      <Title>{text}</Title>\n  )\n}\n\nWarnings.propTypes = {\n  text: PropTypes.string.isRequired\n}\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nconst KEY = '2bec22f10b981066f1b82ccd0874c542';\nconst URL = 'https://api.themoviedb.org/3';\nconst Tranding = '/trending/movie/day';\nconst Search = '/search/movie?';\nconst SearchId = '/movie/';\nconst Credits = '/credits';\nconst Reviews = '/reviews';\n\nconst instance = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: KEY,\n    page: 1,\n  },\n});\n\nexport const getMovieTranding = async () => {\n  const { data } = await instance.get(`${Tranding}`);\n\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await instance.get(`${SearchId}${id}?`);\n\n  return data;\n};\n\nexport const getSearchMovie = async (query, page) => {\n  const { data } = await instance.get(`${Search}?`, {\n    params: {\n      page,\n      query,\n    },\n  });\n\n  return data;\n};\n\nexport const getMovieCast = async id => {\n  const { data } = await instance.get(`${SearchId}${id}${Credits}?`);\n\n  return data;\n};\n\nexport const getMovieReviews = async id => {\n  const { data } = await instance.get(`${SearchId}${id}${Reviews}?`);\n\n  return data;\n};\n\ngetMovieById.PropTypes = {\n  id: PropTypes.number,\n};\n\ngetSearchMovie.PropTypes = {\n  page: PropTypes.number,\n  query: PropTypes.string.isRequired,\n};\n\ngetMovieCast.PropTypes = {\n  id: PropTypes.number,\n};\n\ngetMovieReviews.PropTypes = {\n  id: PropTypes.number,\n};\n"],"names":["HomePage","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","getMovieTranding","data","results","length","console","log","isMovies","Boolean","position","autoClose","Loader","Warnings","text","MoviesGallery","items","Wrapper","styled","Title","Overlay","modalRoot","document","querySelector","props","createPortal","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","Gallery","Item","Image","MoviesGalleryItem","movieId","img","title","location","useLocation","to","state","from","src","alt","map","id","backdrop_path","poster_path","SearchId","instance","axios","baseURL","params","api_key","page","get","getMovieById","getSearchMovie","query","getMovieCast","getMovieReviews","PropTypes"],"sourceRoot":""}