{"version":3,"file":"static/js/550.06ea3363.chunk.js","mappings":"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","sources":["Pages/HomePage/HomePage.jsx","Pages/HomePage/HomePage.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MoviesGallery/MoviesGallery.styled.jsx","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.styled.jsx","components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem.jsx","components/MoviesGallery/MoviesGallery.jsx","components/Warnings/Warnings.styled.jsx","components/Warnings/Warnings.jsx","services/ApiMovie.js"],"sourcesContent":["import Loader from 'components/Loader/Loader';\nimport { getMovieTranding } from 'services/ApiMovie';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Warnings from \"components/Warnings/Warnings\";\nimport React, { useState, useEffect } from 'react';\nimport MoviesGallery from 'components/MoviesGallery/MoviesGallery';\nimport { Title, Wrapper } from './HomePage.styled';\n\nexport default function HomePage() {\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setIsLoading(true);\n    \n      try {\n        const data = await getMovieTranding();\n\n        if (data.results.length === 0) {\n\n        } else {\n          setMovies(data.results);\n        }\n\n      } catch (error) {\n        console.log(error);\n        setError(error);\n      }\n      finally {\n        setIsLoading(false);\n      }\n    }\n  \n    fetchMovies();\n      \n  }, []);\n\n\nconst isMovies = Boolean(movies.length);\n  \n  return (\n    <Wrapper>\n        <Title>Trending today\n        </Title>\n        <ToastContainer position=\"top-right\" autoClose={5000} />\n        {isLoading && <Loader/>}\n        {error && <Warnings text=\"Please, try again later\"/>}\n        {isMovies && <MoviesGallery items={movies} />}\n        {/* {(isMovies && movies.length < totalMovies) && <Button loadMore={loadMore} />} */}\n    </Wrapper>\n  )\n}\n","import styled from \"styled-components\";\n\n\nexport const Wrapper = styled.div`\n  background-color: #00bcd4de;\n  margin: 12px 24px;\n  border-radius: 4px;  \n`;\n\nexport const Title = styled.h2`\n    margin: 12px 24px;\n    font-size: 20px;\n    font-weight: 500;\n    color: #ffffff;\n`","import styled from \"styled-components\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;","import React from 'react';\nimport { BallTriangle } from 'react-loader-spinner'\nimport { Overlay } from './Loader.styled'; \nimport { createPortal } from 'react-dom';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Loader (props) {\n  return createPortal(\n      <Overlay>\n      <BallTriangle\n        height={100}\n        width={100}\n        radius={5}\n        color=\"#4fa94d\"\n        ariaLabel=\"ball-triangle-loading\"\n        wrapperClass={{}}\n        wrapperStyle=\"\"\n        visible={true}\n      />\n      </Overlay>,\n      modalRoot,\n    );\n  }\n\n","import styled from \"styled-components\";\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(480px, 1fr));\n  grid-gap: 5px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    \n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    border-radius: 4px;\n`\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  margin: 5px;\n  background-color: #fff;\n`;\n\nexport const Image = styled.img`\n  width: 30%;\n  height: 100px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  border-radius: 2px;\n\n  &:hover {\n    /* transform: scale(1.03); */\n    cursor: pointer;\n  }\n`;\n\nexport const Title = styled.p`\n  margin-left: 5px;\n`;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Item, Image, Wrapper, Title } from './MoviesGalleryItem.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport default function MoviesGalleryItem({ movieId, img, title }) {\n  const location = useLocation();\n  return (\n    <Item key={movieId}>\n      <Link to={`/movies/${movieId}`} state={{from: location}} >\n        <Wrapper>\n            <Image  src={img} alt={title} />\n           <Title>{title}</Title>          \n      </Wrapper>\n      </Link>\n    </Item>\n    )\n}\n\nMoviesGalleryItem.propTypes = {\n  movieId: PropTypes.number,\n  img: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n}","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Gallery } from './MoviesGallery.styled';\nimport MoviesGalleryItem from 'components/MoviesGallery/MoviesGalleryItem/MoviesGalleryItem';\n\n\nexport default function MoviesGallery({ items }) {\n  console.log(items);\n  const urlImg = \"https://image.tmdb.org/t/p/w500\";\n  return (\n  <Gallery>\n    {\n        items.map(({ id, backdrop_path, title, poster_path }) => {\n\n          const img = backdrop_path ? urlImg + backdrop_path : urlImg + poster_path;\n          return (\n        <MoviesGalleryItem\n          key={id}\n          movieId={id}\n          img={img}\n          title={title}  />)\n        })}\n      </Gallery>\n  );\n};\n\nMoviesGallery.propTypes = {\n    items: PropTypes.arrayOf(PropTypes.shape({\n        backdrop_path: PropTypes.string,\n        id: PropTypes.number,\n        title: PropTypes.string,\n        poster_path: PropTypes.string,\n    }))\n}","import styled from \"styled-components\";\n\nexport const Title = styled.p`\ndisplay: inline-block;\n    font-size: 20px;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 12px 24px;\n`;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { Title } from './Warnings.styled';\n\nexport default function Warnings({text}) {\n  return (\n      <Title>{text}</Title>\n  )\n}\n\nWarnings.propTypes = {\n  text: PropTypes.string.isRequired\n}\n","import axios from 'axios';\n\nconst KEY = '2bec22f10b981066f1b82ccd0874c542';\nconst URL = 'https://api.themoviedb.org/3';\nconst Tranding = '/trending/movie/day';\nconst Search = '/search/movie?';\nconst SearchId = '/movie/';\nconst Credits = '/credits';\nconst Reviews = '/reviews';\n\nconst instance = axios.create({\n  baseURL: URL,\n  params: {\n    api_key: KEY,\n    page: 1,\n  },\n});\n\nexport const getMovieTranding = async () => {\n  const { data } = await instance.get(`${Tranding}`);\n\n  return data;\n};\n\nexport const getMovieById = async (id) => {\n    const { data } = await instance.get(`${SearchId}${id}?`);\n  console.log(\"id\",data);\n\n  return data;\n}\n\nexport const getSearchMovie = async (query, page ) => {\n  const { data } = await instance.get(`${Search}?`, {\n    params: {\n        page,\n        query,\n      }\n    });\n  console.log(\"id\",data);\n\n  return data;\n}\n\nexport const getMovieCast = async (id) => {\n    const { data } = await instance.get(`${SearchId}${id}${Credits}?`);\n  console.log(\"id\",data);\n\n  return data;\n}\n\nexport const getMovieReviews = async (id) => {\n    const { data } = await instance.get(`${SearchId}${id}${Reviews}?`);\n  console.log(\"id\",data);\n\n  return data;\n}\n\n// https://api.themoviedb.org/3/movie/414906/credits?api_key=2bec22f10b981066f1b82ccd0874c542&\n\n// https://api.themoviedb.org/3/search/movie?api_key=2bec22f10b981066f1b82ccd0874c542&query=batman"],"names":["HomePage","useState","movies","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","getMovieTranding","data","results","length","console","log","isMovies","Boolean","position","autoClose","Loader","Warnings","text","MoviesGallery","items","Wrapper","styled","Title","Overlay","modalRoot","document","querySelector","props","createPortal","height","width","radius","color","ariaLabel","wrapperClass","wrapperStyle","visible","Gallery","Item","Image","MoviesGalleryItem","movieId","img","title","location","useLocation","to","state","from","src","alt","urlImg","map","id","backdrop_path","poster_path","SearchId","instance","axios","baseURL","params","api_key","page","get","getMovieById","getSearchMovie","query","getMovieCast","getMovieReviews"],"sourceRoot":""}